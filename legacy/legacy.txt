/*const toggleDarkMode = () => {
    import { useEffect } from "react";
  if (localStorage.theme === 'dark') {
    localStorage.theme = 'light'
  } else {
    localStorage.theme = 'dark'
  }
  useEffect(() => {
    // Perform localStorage action
    if (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      localStorage.theme = 'dark'
    } else {
      localStorage.theme = 'light'
    }
  }, [])
      <button onClick={toggleDarkMode}>devdarkmode under consturction</button>
}*/

//*<Image
          src="/robot2.png"
          alt="Wombat"
          width={580}
          height={0}
          style={imageStyle}
        />*/

        const imageStyle = {
    position: "absolute",
    bottom: "-10rem",
    right: "-54rem",
    width: "64rem",
  } as React.CSSProperties;

  const imageStyle = {
    position: "absolute",
    bottom: "-6rem",
    right: "-36rem",
    width: "48rem",
  } as React.CSSProperties;

  <div className="grid grid-flow-col auto-cols-max justify-evenly    ">
        <div className="max-w-lg border-black rounded-2xl px-12 py-6 child:mx-auto break-words">
          <Image
            alt={"A placeholder"}
            src={"/imadsage.png"}
            width={"100"}
            height={600}
            className="w-full h-auto"
          />
          <h2 className="text-3xl mx-auto font-bold my-4">Motivate Award</h2>
          <p>
            blach lac blach lac blach lac
            blachasdddddddddddddddddddddddddddddddddddddddddddddddd lac blach
            lac blach lac{" "}
          </p>
        </div>
        <div className="max-w-lg border-4 border-black rounded-2xl px-12 py-6 child:mx-auto break-words">
          <Image
            alt={"A placeholder"}
            src={"/team_name.png"}
            width={"100"}
            height={600}
            className="w-full h-60"
          />
          <h2 className="text-3xl mx-auto font-bold my-4">
            Something Choice's Award
          </h2>
          <p>
            Some other award some choice smth this to u juan lac blach lac blach
            lac blachasddddddddddddddddddddddddddddddddddddddddd lac blach lac
            blach lac blachasddddddddddddddddddddddddddddddddddddddddd
          </p>
        </div>
      </div>

      export function Robot() {
  const [mount, setMount] = useState<boolean>(false);

  useEffect(() => {
    setMount(true);
  }, []);

  const imageStyle = {
    position: "absolute",
    bottom: "-14.5rem",
    right: "-3rem",
    marginRight: "1rem",
  } as React.CSSProperties;

  const imageStyleXL = {
    position: "absolute",
    bottom: "-14rem",
    right: "-58rem",
  } as React.CSSProperties;

  const imageStyleL = {
    position: "absolute",
    bottom: "-6rem",
    right: "-38rem",
  } as React.CSSProperties;

  const imageStyleM = {
    marginLeft: "auto",
    marginRight: "auto",
  } as React.CSSProperties;

  const [width, setWidth] = useState<number>(0);

  useEffect(() => {
    function handleResize() {
      setWidth(window.innerWidth);
    }

    window.addEventListener("resize", handleResize);
    handleResize();
    console.log(width);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  function widthGiven(width: number) {
    if (width < 768) {
      return 500;
    } else if (width < 1024) {
      return 580;
    } else if (width > 2248) {
      return 1088;
    } else if (width > 1920) {
      return 768;
    } else {
      return 580;
    }
  }

  function classGiven(widths: number) {
    if (widths < 768) {
      return imageStyleM;
    } else if (widths < 1024) {
      return imageStyleM
    } else if (widths > 2248) {
      return imageStyleXL;
    } else if (widths > 1920) {
      return imageStyleL;
    } else {
      return imageStyle;
    }
  }

  return (
      <Image
        src="/robot2.png"
        alt="An image of the robot"
        sizes="(max-width: 768px) 31rem, (max-width: 1024px) 36rem, (min-width: 2248px) 68rem, (min-width: 1920px) 48rem, 31rem"
        priority
        width={0}
        height={0}
        className="widths"
      />
  );
}

const [ref, inView, entry] = useInView();
  const [animated, setAnimated] = useState<boolean>();

  function checkView() {
    if (inView && !animated) {
      return "in-screen";
    } else if (inView && animated) {
      return "out-screen";
    } else {
      return "";
    }
  }

  function sleep(ms: number) {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }

  useEffect(() => {
    if (inView) {
      sleep(6500).then(() => {
        setAnimated(true);
      });
    }
  }, [inView]);

  "use client";

import { useEffect, useRef } from 'react';
import webGLFluidEnhanced from 'webgl-fluid-enhanced';
import { useTheme } from "next-themes";


export default function CTA() {
    const canvasRef = useRef(null);
    const {setTheme, resolvedTheme} = useTheme();

    useEffect(() => {
      webGLFluidEnhanced.simulation(canvasRef.current!, {
        PRESSURE: 0.8,
        PRESSURE_ITERATIONS: 20,
        SUNRAYS: false,
        DENSITY_DISSIPATION: 1,
        VELOCITY_DISSIPATION: 0.2,
        CURL: 30,
        BLOOM: true,
        BLOOM_ITERATIONS: 8,
        BLOOM_RESOLUTION: 256,
        BLOOM_INTENSITY: 0.8,
        BLOOM_THRESHOLD: 0.6,
        BLOOM_SOFT_KNEE: 0.7,
        SUNRAYS_RESOLUTION: 196,
        SUNRAYS_WEIGHT: 1,
        COLOR_PALETTE: [],
        COLOR_UPDATE_SPEED: 10,
        BRIGHTNESS: 0.5,
        BACK_COLOR: resolvedTheme == "light" ? '#EBE2D3' : "#171717",
      });
    }, []);

    useEffect(() => {
        webGLFluidEnhanced.simulation(canvasRef.current!, {
            BACK_COLOR: resolvedTheme == "light" ? '#EBE2D3' : "#171717",
        });
    }, [resolvedTheme]);

  return (
    <canvas ref={canvasRef} className="w-full h-full" />
  );
}

const { rows } = await sql`SELECT pages FROM misc WHERE id = 1;`;
  console.log(rows.forEach((row) => console.log(row)));

  let pages: string[][] = [];
  for (const row of rows) {
    pages.push(row.pages);
  }

  const pageList: string[] = pages[0];

  import { MDXRemote } from "next-mdx-remote/rsc";
import fs from "fs";
import path from "path";
import { Roboto_Mono } from 'next/font/google'
import { capitalizeFirstLetter } from "@/utils/utils";
import { metadata } from '../../layout';
import { get } from "http";
import dynamic from 'next/dynamic'
import And from '/and.mdx'

const roboto = Roboto_Mono({ subsets: ['latin'] })



async function getContent(page: string) {
  const configDirectory = path.resolve(process.cwd(), "public/content");
  const file = `${page}.mdx`;
  try {
    return fs.readFileSync(path.join(configDirectory, file), "utf8");
  } catch (error) {
    console.error(error);
    return "# Sorry, we don't have that yet.\nContact us and we'll see what we can do. <br />```Error 404```";
  }
}

export default async function Page({ params }: { params: { page: string } }) {
  const page = params.page;
  const content = await getContent(page);
  const mdstyles =
    "descendant:text-wrap descendant:break-words child-h1:text-2xl sm:child-h1:text-4xl md:child-h1:text-6xl child-h1:font-bold child-h1:my-8 child-h2:text-2xl child-h2:font-bold child-h2:my-6 child-p:my-4 child-p:text-base descendant-img:my-8 child-ul:list-disc child-blockquote:max-w-small child-blockquote:italic child-blockquote:px-4 child-blockquote:border-l-4 child-blockquote:border-black dark:child-blockquote:border-white child-pre:bg-midbeige dark:child-pre:bg-mutegrey child-pre:pl-4 child-pre:py-2 child-pre:rounded-md child-pre:text-wrap";

  return (
    <section className={roboto.className}>
      <section className={`px-2 sm:px-6 md:px-12 py-12 h-full w-4/5 max-w-screen-3xl mx-auto ${mdstyles} `}>
        <h1>{capitalizeFirstLetter(page.split('~')[0].replace(/-/g, ' ') + ".")}</h1>
        <hr className=" border-t-2 mb-3 border-black dark:border-white"></hr>
        <i>{page.split('~')[1]}</i>
        <MDXRemote source={content} />
        <And />
        <code className="italic">Page Slug: {params.page}</code>
        <code className="italic">Page Name:test:01:cred:(insert:code:200)</code>
      </section>
    </section>
  );
}

{capitalizeFirstLetter(page.slice(0, -3).split('~')[0].replace(/-/g, ' ') + ".")}

        <h1>{capitalizeFirstLetter(page.split('~')[0].replace(/-/g, ' ') + ".")}</h1>

async function getContent(page: string) {
  const configDirectory = path.resolve(process.cwd(), "public/content");
  const file = `${page}.mdx`;
  try {
    return fs.readFileSync(path.join(configDirectory, file), "utf8");
  } catch (error) {
    console.error(error);
    return "# Sorry, we don't have that yet.\nContact us and we'll see what we can do. <br />```Error 404```";
  }
}


async function getFiles() {
  const configDirectory = path.resolve(process.cwd(), "public/content");
  const pages: string[] = [];

  try {
    const files = await fs.readdir(configDirectory);
    for (const file of files) {
      pages.push(file);
    }
  } catch (err) {
    console.error(err);
  }

  return pages;
}

const fs = require("fs");

console.log("running");
const testFolder = "./contrans/";

const readline = require("readline");
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

fs.readdir(testFolder, (err, files) => {
  files.forEach((file) => {
    console.log(
      "./contrans/" + file + ", mb the function only does one file at a time. no full stop (.) just words and spaces and remember to end with a character not a space"
    );
    rl.question("What is the name of the file ", function (namefile) {
      let str = namefile;
      str = str.replace(/\s+/g, "-").toLowerCase();

      const date = new Date();
      let day = date.getDate();
      let month = date.getMonth() + 1;
      let year = date.getFullYear();

      let currentDate = `${day}-${month}-${year}`;
      fs.rename(
        "./contrans/" + file,
        "./combatwombatsftc/public/content/" + str + "~" + currentDate + ".md",
        (err) => {
          if (err) {
            console.log(err);
          }
        }
      );
      rl.close();
    });
  });
});

//!IMPORTANT

let response = await fetch(path.join(`/api/${slug}`), {
    method: "GET",
  });

  let post = await response.json();
  console.log(post);

  <div
                  id="trailer"
                  ref={trailer as React.RefObject<HTMLDivElement>}
                  className="w-10 h-10 fixed block left-0 top-0 rounded-full bg-red-800"
                >
                  <i id="trailer-icon" className=""></i>
                </div>

                onMouseMove={(e) => hello(e)}

                 const trailer = useRef<HTMLElement>();

  const animateTrailer = (e: any, interacting: any) => {
    if (trailer.current) {
      const x = e.clientX - trailer.current.offsetHeight / 2,
        y = e.clientY - trailer.current.offsetWidth / 2;

      const keyframes = {
        transform: `translate(${x}px, ${y}px) scale(${interacting ? 8 : 1})`,
      };

      trailer.current.animate(keyframes, {
        duration: 800,
        fill: "forwards",
      });
    }
  };

  function hello(e: any) {
    const interactable = e.target.closest(".interactable"),
      interacting = interactable !== null;

    if (trailer.current) {
      trailer.current.style.position = "fixed";
    }
    animateTrailer(e, interacting);
  }

  import { useState, useEffect, useRef } from "react";

  <hr className=" bg-[url('/images/svgLarge/3.svg')] w-full h-min bg-cover aspect-[600/50] md:aspect-[1800/100] bg-center border-none" />
        <hr className=" bg-[url('/images/svgLarge/4.svg')] w-full h-min bg-cover aspect-[600/50] md:aspect-[1800/100] bg-center border-none rotate-180" />

        <hr className=" text-[0] bg-[url('/images/svgLarge/1.svg')] w-full h-min bg-cover aspect-[600/50] md:aspect-[1800/100] bg-bottom border-none" />
        <hr className=" bg-[url('/images/svgLarge/2.svg')] w-full h-min bg-cover aspect-[600/50] md:aspect-[1800/100] border-none rotate-180" />

function createMap(array: any[]) {
  return array.map((post) => {
    return (
      <Link
        href={`/docs/${post.slug}`}
        key={post.slug}
        className={roboto.className}
      >
        <li className="border-2 md:border-4 border-black dark:border-white px-6 py-2 rounded-xl">
          <h1 className="sm:text-xl md:text-xl lg:text-2xl 2xl:text-3xl font-semibold my-1 md:my-2 xl:my-3">
            {post.title}
          </h1>
          <i className="my-1 md:my-2 lg:my-3 3xl:my-2 block md:text-sm lg:text-base">
            {post.date}
          </i>
          <p className="my-1 md:my-2 lg:my-3 3xl:my-2 md:text-sm lg:text-base">
            {post.description}
          </p>
        </li>
      </Link>
    );
  });
}

function createSidebar(array: any[]) {
  return array.map((post) => {
    return (
      <Link
        href={`/docs/${post.slug}`}
        key={post.slug}
        className={roboto.className}
      >
        <li className="border-l-2 border-black dark:border-white pl-2">
          <h1 className="sm:text-xs md:text-sm lg:text-base 2xl:text-lg hover:font-medium">
            {post.title}
          </h1>
        </li>
      </Link>
    );
  });
}

export function SideNav() {
  const [open, setOpen] = useState(false);

  return (
    <div>
      <ul className="md:hidden flex flex-row justify-between child:mx-4 py-3">
        <li>
          <a href="/">
            <Image
              src={"/images/image-transformed.webp"}
              alt="Team logo of a wombat"
              width="40"
              height="40"
              className="dark:invert aspect-[96/77] w-auto"
            />
          </a>
        </li>
        <li className=" text-3xl" onClick={() => setOpen(true)}>
          <IoMenu />
        </li>
      </ul>
      <nav
        className={`fixed right-0 top-0 bg-gradient-to-r from-darkgrey to-lightgrey text-white transition-all ${
          open ? "w-56" : "w-0"
        } h-full z-50 overflow-hidden`}
      >
        <ul className="flex flex-col child:my-2 child:py-1 items-center child:px-6 child:border-solid child:border-b-2 h-full">
          <li
            className="border-none ml-auto text-2xl mt-3"
            onClick={() => setOpen(false)}
          >
            <RxCross1 />
          </li>
          <li>
            <Link href="/about">About Us</Link>
          </li>
          <li>
            <Link href="/docs">FTC Docs</Link>
          </li>
          <li>
            <Link href="/sponsors">FTC Docs</Link>
          </li>
          <li className="mb-auto">
            <Link href="/outreach">Outreach</Link>
          </li>
          <li className="border-none w-full">
            <ul className="flex flex-row justify-evenly text-2xl">
              <li className="">
                <DarkMode />
              </li>
              <li className="border-none">
                <Link
                  href="https://github.com/vinaysruban/combatwombatsftc"
                  aria-label="The project's Github"
                >
                  <SiGithub />
                </Link>
              </li>
            </ul>
          </li>
        </ul>
      </nav>
    </div>
  );
}

"use client"
import { useEffect, useRef } from 'react';
import webGLFluidEnhanced from 'webgl-fluid-enhanced';
import { useTheme } from "next-themes";


export default function CTA(children: any) {
    const canvasRef = useRef(null);
    const {setTheme, resolvedTheme} = useTheme();

    useEffect(() => {
      webGLFluidEnhanced.simulation(canvasRef.current!, {
        PRESSURE: 0.8,
        PRESSURE_ITERATIONS: 20,
        SUNRAYS: false,
        DENSITY_DISSIPATION: 1,
        VELOCITY_DISSIPATION: 0.2,
        CURL: 30,
        BLOOM: true,
        BLOOM_ITERATIONS: 8,
        BLOOM_RESOLUTION: 256,
        BLOOM_INTENSITY: 2,
        BLOOM_THRESHOLD: 0.6,
        BLOOM_SOFT_KNEE: 0.7,
        SUNRAYS_RESOLUTION: 196,
        SUNRAYS_WEIGHT: 1,
        COLOR_PALETTE: [],
        COLOR_UPDATE_SPEED: 10,
        BRIGHTNESS: 0.5,
        INITIAL: true,
        SPLAT_AMOUNT: 10,
        BACK_COLOR: resolvedTheme == "light" ? '#EBE2D3' : "#171717",
      });
    }, []);

    useEffect(() => {
        webGLFluidEnhanced.simulation(canvasRef.current!, {
            BACK_COLOR: resolvedTheme == "light" ? '#EBE2D3' : "#171717",
        });
    }, [resolvedTheme]);

  return (
    <canvas ref={canvasRef} className="w-full h-full absolute" />
  );
}

export function capitalizeFirstLetter(string: string) { return string.charAt(0).toUpperCase() + string.slice(1); }

//unused prep for legacy

"use client";

import Image from "next/image";
import { useEffect, useState, useCallback } from "react";
import { useInView } from "react-intersection-observer";

export function Line() {
  return (
    <hr
      className={`h-1 rounded-xl border-0 w-0 my-6 bg-combatgreen after:content-[''] after:w-2 after:h-2 after:rounded-full after:bg-combatgreen after:absolute animation-line`}
    />
  );
}

/* "use client"

export default function Error() {
  const mdstyles =
    "descendant:text-wrap descendant:break-words child-h1:text-2xl sm:child-h1:text-4xl md:child-h1:text-6xl child-h1:font-bold child-h1:my-8 child-h2:text-2xl child-h2:font-bold child-h2:my-6 child-p:my-4 child-p:text-base descendant-img:my-8 child-ul:list-disc child-blockquote:max-w-small child-blockquote:italic child-blockquote:px-4 child-blockquote:border-l-4 child-blockquote:border-black dark:child-blockquote:border-white child-pre:bg-midbeige dark:child-pre:bg-mutegrey child-pre:pl-4 child-pre:py-2 child-pre:rounded-md child-pre:text-wrap";


  return (
    <section className={`px-2 sm:px-6 md:px-12 py-12 h-full w-4/5 max-w-screen-3xl mx-auto ${mdstyles}`}>
      <h1 className="">Error: 404</h1>
      <hr className=" border-t-2 mb-3 border-black dark:border-white"></hr>
      <p className="font-semibold">This page does not exist</p>
    </section>
  );
}
 */

 /* import 'server-only'

import { MDXRemote } from "next-mdx-remote/rsc";
import { Roboto_Mono } from "next/font/google";
import getPostMetadata from "@/utils/getPosts";
import GoBack from "@/components/goBack";
import Image from "next/image";
import fs from "fs";
import matter from "gray-matter";
import path from "path";
import type { Metadata, ResolvingMetadata } from 'next'
import Markdown from '@/components/markdown'
import PrismProvider from "@/components/prismprovider";

export async function generateMetadata(
  params: any,
  parent: ResolvingMetadata
): Promise<Metadata> {
  const slug = params.params.page;
  const post = await getPostContent(slug);

  return {
    title: post.title,
    description: post.description + " | " + "Discover cutting-edge robotics programming and FIRST Tech Challenge (FTC) insights with the Combat Wombats. Access a wealth of pre-written documentation, coding blueprints, and technical guides designed specifically for FTC enthusiasts. Delve into advanced robotics strategies, innovative design concepts, and efficient coding methods. Elevate your skills and excel in FTC competitions with the Combat Wombats' exclusive resources and expertise. FTC #23335's Website",
  }
}

const roboto = Roboto_Mono({ subsets: ["latin"] });

const getPostContent = async (slug: string) => {
  const folder = path.join(process.cwd(), "/src/content/");
  const file = `${folder}${slug}.mdx`;
  try {
  const content = fs.readFileSync(file, "utf8");
  const matterResult = matter(content);
  return {
    slug,
    content: matterResult.content,
    ...(matterResult.data as { title: string; author: string, image: string, description: string, date: string, tags: string[], latex: boolean}),
  };
  } catch (e) {
    throw new Error("Post not found: " + e);
  };
};

export const generateStaticParams = async () => {
  const posts = getPostMetadata();
  return posts.map((post) => ({
    slug: post.slug,
  }));
};

export default async function Page(params: any) {
  const slug = params.params.page;
  const post = await getPostContent(slug);

  if (post.latex === undefined) {
    post.latex = false;
  }


  const mdstyles =
    "descendant:text-wrap descendant:break-words descendant-h1:text-2xl sm:descendant-h1:text-4xl md:descendant-h1:text-6xl descendant-h1:font-bold descendant-h1:mt-8 descendant-h2:text-2xl 2xl:descendant-h2:text-3xl descendant-h2:font-extrabold descendant-h2:my-6 descendant-p:my-4 descendant-p:text-base 2xl:descendant-p:text-lg 3xl:descendant-p:text-xl descendant-img:my-8 descendant-ul:list-disc descendant-blockquote:max-w-small descendant-blockquote:italic descendant-blockquote:px-4 descendant-blockquote:border-l-4 descendant-blockquote:border-black dark:descendant-blockquote:border-white descendant-pre:text-base 2xl:descendant-pre:text-lg 3xl:descendant-pre:text-xl descendant-pre:bg-midbeige dark:descendant-pre:bg-mutegrey descendant-pre:pl-4 descendant-pre:py-2 descendant-pre:rounded-md descendant-pre:text-wrap descendant-h3:font-bold descendant-h3:text-lg";

  return (
    <section
      className={`px-2 sm:px-6 md:px-12 py-12 h-full w-4/5 max-w-screen-3xl mx-auto ${mdstyles} ${roboto.className} `}
    >
      <PrismProvider />
      <GoBack path="/docs" />
      <h1>{post.title}</h1>
      <span className="flex items-center">
        <Image
          alt={"Icon"}
          height={100}
          width={100}
          src={post.image}
          className="w-8 h-8 md:h-16 md:w-16 object-cover rounded-full"
        />
        <p className="ml-4 text-xs xs:text-sm ms:text-base">{post.author}</p>
      </span>
      <hr className="border-t-2 sm:border-t-4 md:border-t-8 mb-3 border-black dark:border-white"></hr>
      <span className="flex justify-between flex-col md:flex-row">
        <i>{post.date}</i>
        <p>{post.tags.join(' | ')}</p>
      </span>
      {post.latex ? <Markdown><MDXRemote source={post.content} /></Markdown> : <MDXRemote source={post.content} />}
      <code className="italic">Courtesy of The Combat Wombats.</code>
    </section>
  );
}
 */

 /* import "server-only";

import Link from "next/link";
import getPostMetadata from "@/utils/getPosts";
import GoBack from "@/components/goBack";
import { Roboto_Mono } from "next/font/google";
import Image from "next/image";
import type { Metadata } from "next/";

export const metadata: Metadata = {
  title: "Robot Documentation",
  description:
    "Discover cutting-edge robotics programming and FIRST Tech Challenge (FTC) insights with the Combat Wombats. Access a wealth of pre-written documentation, coding blueprints, and technical guides designed specifically for FTC enthusiasts. Delve into advanced robotics strategies, innovative design concepts, and efficient coding methods. Elevate your skills and excel in FTC competitions with the Combat Wombats' exclusive resources and expertise. FTC #23335's Website",
};

const roboto = Roboto_Mono({ subsets: ["latin"] });

export default async function Page() {
  const postMetadata = getPostMetadata();

  const list = postMetadata.map((post) => {
    return (
      <Link
        href={`/docs/${post.slug}`}
        key={post.slug}
        className={roboto.className}
      >
        <li className="border-2 md:border-4 border-black dark:border-white px-6 py-2 rounded-xl">
          <h1 className="sm:text-xl md:text-xl lg:text-2xl 2xl:text-3xl font-semibold my-1 md:my-2 xl:my-3">
            {post.title}
          </h1>
          <span className="flex items-center 3xl:float-right">
            <Image
              alt={"Icon"}
              height={100}
              width={100}
              src={post.image}
              className="w-8 h-8 md:h-12 md:w-12 object-cover rounded-full"
            />
            <p className="ml-4 text-xs xs:text-sm ms:text-base 2xl:text-lg 4xl:text-xl">
              {post.author}
            </p>
          </span>
          <i className="my-1 md:my-2 lg:my-3 3xl:my-2 block md:text-sm lg:text-base">
            {post.date}
          </i>
          <p className="my-1 md:my-2 lg:my-3 3xl:my-2 md:text-sm lg:text-base">
            {post.description}
          </p>
        </li>
      </Link>
    );
  });

  const mdstyles =
    "descendant:text-wrap descendant:break-words child-h1:text-2xl sm:child-h1:text-4xl md:child-h1:text-6xl lg:child-h1:text-7xl child-h1:font-bold child-h1:my-8 child-h2:text-2xl child-h2:font-bold child-h2:my-6 child-p:my-4 child-p:text-base child-blockquote:max-w-small child-blockquote:italic child-blockquote:px-4 child-blockquote:border-l-4 child-blockquote:border-black dark:child-blockquote:border-white child-pre:bg-midbeige dark:child-pre:bg-mutegrey child-pre:pl-4 child-pre:py-2 child-pre:rounded-md child-pre:text-wrap";

  return (
    <div>
      <header className="w-full bg-combatgreen text-center text-bold mt-4 py-4 text-xl font-bold ">
      <Link href="/docs/beta">Go to beta docs click here</Link>
      </header>
      <section
        className={`px-2 sm:px-6 md:px-12 py-12 h-full w-4/5 max-w-screen-3xl mx-auto ${mdstyles}`}
      >
        <GoBack path="../" />

        <h1 className="">Our Docs</h1>
        <hr className="border-t-2 sm:border-t-4 md:border-t-8 mb-3 border-black dark:border-white"></hr>
        <p className="font-semibold">
          Check out our extensive (soon) documentation to get you started
        </p>
        <ul className="flex flex-col gap-6 2xl:gap-8">{list}</ul>
      </section>
    </div>
  );
}
 */

 "use client";
import { useState, useEffect } from "react";

export default function InstallPWA() {
  const [showInstallPrompt, setShowInstallPrompt] = useState<boolean>(false);
  const [prompt, setPrompt] = useState<Event | null>(null);

  useEffect(() => {
    const handleBeforeInstallPrompt = (e: Event) => {
      e.preventDefault();
      setPrompt(e);
    };

    window.addEventListener("beforeinstallprompt", handleBeforeInstallPrompt);

    if (!window.matchMedia("(display-mode: standalone)").matches) {
      setShowInstallPrompt(true);
    }

    return () => {
      window.removeEventListener(
        "beforeinstallprompt",
        handleBeforeInstallPrompt
      );
    };
  }, []);

  const handleInstall = async () => {
    if (prompt) {
      await (prompt as any).prompt();
    }
  };

  const handleDismiss = () => {
    setShowInstallPrompt(false);
  };

  return (
    <div
      className={`${showInstallPrompt ? "" : "hidden"} flex flex-col items-center w-full`}

    >
      <div className=" bg-midbeige dark:bg-darkgrey rounded-3xl border-4 border-combatgreen px-3 py-6 text-base fixed bottom-4 z-50 flex flex-col max-w-screen-xs items-center gap-3">
        <h1 className="text-xl font-bold">It looks better on our app!</h1>
        <p className="text-center">
          Support us by installing our app{" "}
          <strong className="text-wombatbrown">directly from here</strong>{" "}
          <strong className="text-combatgreen">for free</strong>.
        </p>
        <button
          className="bg-combatgreen rounded-3xl px-8 py-1 font-semibold"
          onClick={() => {
            handleInstall();
          }}
        >
          Install
        </button>
        <button className="bg-wombatbrown rounded-3xl px-8 py-1 font-semibold" onClick={() => handleDismiss()}>
          Close
        </button>
        <i className="text-xs">No hard feelings if you don't want to.</i>
      </div>
    </div>
  );
}

<svg id="visual" viewBox="0 0 1800 100" width="1800" height="100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 33L42.8 34.2C85.7 35.3 171.3 37.7 257 38.2C342.7 38.7 428.3 37.3 514 33.8C599.7 30.3 685.3 24.7 771.2 22.8C857 21 943 23 1028.8 27.3C1114.7 31.7 1200.3 38.3 1286 38C1371.7 37.7 1457.3 30.3 1543 27.3C1628.7 24.3 1714.3 25.7 1757.2 26.3L1800 27L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#8f9853"></path><path d="M0 44L42.8 44.7C85.7 45.3 171.3 46.7 257 44.5C342.7 42.3 428.3 36.7 514 37C599.7 37.3 685.3 43.7 771.2 47.8C857 52 943 54 1028.8 52.5C1114.7 51 1200.3 46 1286 46C1371.7 46 1457.3 51 1543 50.8C1628.7 50.7 1714.3 45.3 1757.2 42.7L1800 40L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#928f4e"></path><path d="M0 52L42.8 53C85.7 54 171.3 56 257 58.8C342.7 61.7 428.3 65.3 514 66.2C599.7 67 685.3 65 771.2 64.5C857 64 943 65 1028.8 65.7C1114.7 66.3 1200.3 66.7 1286 63.3C1371.7 60 1457.3 53 1543 49.5C1628.7 46 1714.3 46 1757.2 46L1800 46L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#93874b"></path><path d="M0 70L42.8 69C85.7 68 171.3 66 257 65.7C342.7 65.3 428.3 66.7 514 67.7C599.7 68.7 685.3 69.3 771.2 69.7C857 70 943 70 1028.8 70.5C1114.7 71 1200.3 72 1286 70.3C1371.7 68.7 1457.3 64.3 1543 63.8C1628.7 63.3 1714.3 66.7 1757.2 68.3L1800 70L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#937f49"></path><path d="M0 78L42.8 77.7C85.7 77.3 171.3 76.7 257 78.5C342.7 80.3 428.3 84.7 514 85.3C599.7 86 685.3 83 771.2 82C857 81 943 82 1028.8 82.7C1114.7 83.3 1200.3 83.7 1286 84.5C1371.7 85.3 1457.3 86.7 1543 87.7C1628.7 88.7 1714.3 89.3 1757.2 89.7L1800 90L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1800 100" width="1800" height="100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 36L42.8 36.5C85.7 37 171.3 38 257 36.2C342.7 34.3 428.3 29.7 514 29.7C599.7 29.7 685.3 34.3 771.2 33.7C857 33 943 27 1028.8 25.8C1114.7 24.7 1200.3 28.3 1286 29.5C1371.7 30.7 1457.3 29.3 1543 28C1628.7 26.7 1714.3 25.3 1757.2 24.7L1800 24L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#8f9853"></path><path d="M0 43L42.8 44C85.7 45 171.3 47 257 47.8C342.7 48.7 428.3 48.3 514 47.2C599.7 46 685.3 44 771.2 45.7C857 47.3 943 52.7 1028.8 54.8C1114.7 57 1200.3 56 1286 53.8C1371.7 51.7 1457.3 48.3 1543 45.5C1628.7 42.7 1714.3 40.3 1757.2 39.2L1800 38L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#928f4e"></path><path d="M0 54L42.8 52.7C85.7 51.3 171.3 48.7 257 50.5C342.7 52.3 428.3 58.7 514 61C599.7 63.3 685.3 61.7 771.2 61.5C857 61.3 943 62.7 1028.8 61.5C1114.7 60.3 1200.3 56.7 1286 54.7C1371.7 52.7 1457.3 52.3 1543 51C1628.7 49.7 1714.3 47.3 1757.2 46.2L1800 45L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#93874b"></path><path d="M0 79L42.8 76.8C85.7 74.7 171.3 70.3 257 68.8C342.7 67.3 428.3 68.7 514 68.5C599.7 68.3 685.3 66.7 771.2 66.5C857 66.3 943 67.7 1028.8 67.5C1114.7 67.3 1200.3 65.7 1286 65.8C1371.7 66 1457.3 68 1543 69.2C1628.7 70.3 1714.3 70.7 1757.2 70.8L1800 71L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#937f49"></path><path d="M0 86L42.8 84.2C85.7 82.3 171.3 78.7 257 76.8C342.7 75 428.3 75 514 76.3C599.7 77.7 685.3 80.3 771.2 81.3C857 82.3 943 81.7 1028.8 82.5C1114.7 83.3 1200.3 85.7 1286 84.8C1371.7 84 1457.3 80 1543 77.8C1628.7 75.7 1714.3 75.3 1757.2 75.2L1800 75L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1800 100" width="1800" height="100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 23L42.8 26.2C85.7 29.3 171.3 35.7 257 34.7C342.7 33.7 428.3 25.3 514 22C599.7 18.7 685.3 20.3 771.2 24.7C857 29 943 36 1028.8 38C1114.7 40 1200.3 37 1286 35.8C1371.7 34.7 1457.3 35.3 1543 34.3C1628.7 33.3 1714.3 30.7 1757.2 29.3L1800 28L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#8f9853"></path><path d="M0 53L42.8 50.7C85.7 48.3 171.3 43.7 257 43.7C342.7 43.7 428.3 48.3 514 50.5C599.7 52.7 685.3 52.3 771.2 50.5C857 48.7 943 45.3 1028.8 44.5C1114.7 43.7 1200.3 45.3 1286 45.5C1371.7 45.7 1457.3 44.3 1543 42.3C1628.7 40.3 1714.3 37.7 1757.2 36.3L1800 35L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#928f4e"></path><path d="M0 46L42.8 49.7C85.7 53.3 171.3 60.7 257 61C342.7 61.3 428.3 54.7 514 52.7C599.7 50.7 685.3 53.3 771.2 54.2C857 55 943 54 1028.8 55.2C1114.7 56.3 1200.3 59.7 1286 59.3C1371.7 59 1457.3 55 1543 55.2C1628.7 55.3 1714.3 59.7 1757.2 61.8L1800 64L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#93874b"></path><path d="M0 69L42.8 70.3C85.7 71.7 171.3 74.3 257 73.8C342.7 73.3 428.3 69.7 514 69.5C599.7 69.3 685.3 72.7 771.2 72.2C857 71.7 943 67.3 1028.8 66.8C1114.7 66.3 1200.3 69.7 1286 70.2C1371.7 70.7 1457.3 68.3 1543 67.3C1628.7 66.3 1714.3 66.7 1757.2 66.8L1800 67L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#937f49"></path><path d="M0 81L42.8 80.5C85.7 80 171.3 79 257 80.2C342.7 81.3 428.3 84.7 514 84.5C599.7 84.3 685.3 80.7 771.2 79.3C857 78 943 79 1028.8 80.8C1114.7 82.7 1200.3 85.3 1286 85.5C1371.7 85.7 1457.3 83.3 1543 82C1628.7 80.7 1714.3 80.3 1757.2 80.2L1800 80L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1800 100" width="1800" height="100" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 26L42.8 25.5C85.7 25 171.3 24 257 23.7C342.7 23.3 428.3 23.7 514 25C599.7 26.3 685.3 28.7 771.2 27.8C857 27 943 23 1028.8 24.7C1114.7 26.3 1200.3 33.7 1286 34.5C1371.7 35.3 1457.3 29.7 1543 30.7C1628.7 31.7 1714.3 39.3 1757.2 43.2L1800 47L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#8f9853"></path><path d="M0 48L42.8 49.7C85.7 51.3 171.3 54.7 257 53.3C342.7 52 428.3 46 514 45.8C599.7 45.7 685.3 51.3 771.2 53C857 54.7 943 52.3 1028.8 51.5C1114.7 50.7 1200.3 51.3 1286 49.3C1371.7 47.3 1457.3 42.7 1543 42C1628.7 41.3 1714.3 44.7 1757.2 46.3L1800 48L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#928f4e"></path><path d="M0 56L42.8 55.7C85.7 55.3 171.3 54.7 257 56C342.7 57.3 428.3 60.7 514 61.7C599.7 62.7 685.3 61.3 771.2 60.8C857 60.3 943 60.7 1028.8 60.5C1114.7 60.3 1200.3 59.7 1286 58.8C1371.7 58 1457.3 57 1543 57.2C1628.7 57.3 1714.3 58.7 1757.2 59.3L1800 60L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#93874b"></path><path d="M0 65L42.8 67.5C85.7 70 171.3 75 257 77.3C342.7 79.7 428.3 79.3 514 76C599.7 72.7 685.3 66.3 771.2 66.5C857 66.7 943 73.3 1028.8 76.7C1114.7 80 1200.3 80 1286 77.5C1371.7 75 1457.3 70 1543 66.8C1628.7 63.7 1714.3 62.3 1757.2 61.7L1800 61L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#937f49"></path><path d="M0 79L42.8 80.5C85.7 82 171.3 85 257 86.3C342.7 87.7 428.3 87.3 514 87.7C599.7 88 685.3 89 771.2 87C857 85 943 80 1028.8 78C1114.7 76 1200.3 77 1286 78.3C1371.7 79.7 1457.3 81.3 1543 83.2C1628.7 85 1714.3 87 1757.2 88L1800 89L1800 101L1757.2 101C1714.3 101 1628.7 101 1543 101C1457.3 101 1371.7 101 1286 101C1200.3 101 1114.7 101 1028.8 101C943 101 857 101 771.2 101C685.3 101 599.7 101 514 101C428.3 101 342.7 101 257 101C171.3 101 85.7 101 42.8 101L0 101Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1020 50" width="1020" height="50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 15L13 14.5C26 14 52 13 78.2 11.8C104.3 10.7 130.7 9.3 156.8 8.7C183 8 209 8 235.2 8.8C261.3 9.7 287.7 11.3 313.8 14.7C340 18 366 23 392.2 25C418.3 27 444.7 26 470.8 24.7C497 23.3 523 21.7 549.2 18.3C575.3 15 601.7 10 627.8 11.7C654 13.3 680 21.7 706.2 24.3C732.3 27 758.7 24 784.8 19.2C811 14.3 837 7.7 863.2 6.5C889.3 5.3 915.7 9.7 941.8 11.8C968 14 994 14 1007 14L1020 14L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#8f9853"></path><path d="M0 12L13 13.3C26 14.7 52 17.3 78.2 20C104.3 22.7 130.7 25.3 156.8 26.3C183 27.3 209 26.7 235.2 23.3C261.3 20 287.7 14 313.8 15.3C340 16.7 366 25.3 392.2 28.8C418.3 32.3 444.7 30.7 470.8 30C497 29.3 523 29.7 549.2 27.5C575.3 25.3 601.7 20.7 627.8 19C654 17.3 680 18.7 706.2 20.5C732.3 22.3 758.7 24.7 784.8 25C811 25.3 837 23.7 863.2 20.8C889.3 18 915.7 14 941.8 15.3C968 16.7 994 23.3 1007 26.7L1020 30L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#928f4e"></path><path d="M0 19L13 20.2C26 21.3 52 23.7 78.2 26C104.3 28.3 130.7 30.7 156.8 30.7C183 30.7 209 28.3 235.2 26.5C261.3 24.7 287.7 23.3 313.8 22.2C340 21 366 20 392.2 19.3C418.3 18.7 444.7 18.3 470.8 18.3C497 18.3 523 18.7 549.2 19.5C575.3 20.3 601.7 21.7 627.8 25.2C654 28.7 680 34.3 706.2 36C732.3 37.7 758.7 35.3 784.8 33C811 30.7 837 28.3 863.2 25.7C889.3 23 915.7 20 941.8 19.8C968 19.7 994 22.3 1007 23.7L1020 25L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#93874b"></path><path d="M0 37L13 36.8C26 36.7 52 36.3 78.2 35.5C104.3 34.7 130.7 33.3 156.8 33.7C183 34 209 36 235.2 36.2C261.3 36.3 287.7 34.7 313.8 35.5C340 36.3 366 39.7 392.2 39.2C418.3 38.7 444.7 34.3 470.8 32C497 29.7 523 29.3 549.2 29.5C575.3 29.7 601.7 30.3 627.8 32.2C654 34 680 37 706.2 38.7C732.3 40.3 758.7 40.7 784.8 38.5C811 36.3 837 31.7 863.2 32.2C889.3 32.7 915.7 38.3 941.8 40.3C968 42.3 994 40.7 1007 39.8L1020 39L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#937f49"></path><path d="M0 46L13 44.7C26 43.3 52 40.7 78.2 39.8C104.3 39 130.7 40 156.8 40C183 40 209 39 235.2 39.7C261.3 40.3 287.7 42.7 313.8 42.2C340 41.7 366 38.3 392.2 38.8C418.3 39.3 444.7 43.7 470.8 45.8C497 48 523 48 549.2 47C575.3 46 601.7 44 627.8 42.2C654 40.3 680 38.7 706.2 38.2C732.3 37.7 758.7 38.3 784.8 38.2C811 38 837 37 863.2 37.7C889.3 38.3 915.7 40.7 941.8 42.5C968 44.3 994 45.7 1007 46.3L1020 47L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1020 50" width="1020" height="50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 5L13 5.5C26 6 52 7 78.2 7.3C104.3 7.7 130.7 7.3 156.8 7.5C183 7.7 209 8.3 235.2 10.7C261.3 13 287.7 17 313.8 18.3C340 19.7 366 18.3 392.2 15.2C418.3 12 444.7 7 470.8 6.3C497 5.7 523 9.3 549.2 10.5C575.3 11.7 601.7 10.3 627.8 12C654 13.7 680 18.3 706.2 18.8C732.3 19.3 758.7 15.7 784.8 12.8C811 10 837 8 863.2 10.8C889.3 13.7 915.7 21.3 941.8 24.2C968 27 994 25 1007 24L1020 23L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#8f9853"></path><path d="M0 30L13 27.2C26 24.3 52 18.7 78.2 18.3C104.3 18 130.7 23 156.8 23.3C183 23.7 209 19.3 235.2 19.3C261.3 19.3 287.7 23.7 313.8 25C340 26.3 366 24.7 392.2 22.8C418.3 21 444.7 19 470.8 16.3C497 13.7 523 10.3 549.2 10.5C575.3 10.7 601.7 14.3 627.8 14.5C654 14.7 680 11.3 706.2 10.2C732.3 9 758.7 10 784.8 13.3C811 16.7 837 22.3 863.2 24.8C889.3 27.3 915.7 26.7 941.8 26.5C968 26.3 994 26.7 1007 26.8L1020 27L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#928f4e"></path><path d="M0 21L13 20.8C26 20.7 52 20.3 78.2 23.5C104.3 26.7 130.7 33.3 156.8 36.3C183 39.3 209 38.7 235.2 38.2C261.3 37.7 287.7 37.3 313.8 35.7C340 34 366 31 392.2 29.7C418.3 28.3 444.7 28.7 470.8 27.7C497 26.7 523 24.3 549.2 23.8C575.3 23.3 601.7 24.7 627.8 25.8C654 27 680 28 706.2 29.7C732.3 31.3 758.7 33.7 784.8 35.5C811 37.3 837 38.7 863.2 38.8C889.3 39 915.7 38 941.8 34C968 30 994 23 1007 19.5L1020 16L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#93874b"></path><path d="M0 37L13 36.5C26 36 52 35 78.2 34.3C104.3 33.7 130.7 33.3 156.8 34.8C183 36.3 209 39.7 235.2 41.5C261.3 43.3 287.7 43.7 313.8 41C340 38.3 366 32.7 392.2 32.3C418.3 32 444.7 37 470.8 38.2C497 39.3 523 36.7 549.2 34.5C575.3 32.3 601.7 30.7 627.8 31.7C654 32.7 680 36.3 706.2 38.2C732.3 40 758.7 40 784.8 40.3C811 40.7 837 41.3 863.2 41.7C889.3 42 915.7 42 941.8 41.3C968 40.7 994 39.3 1007 38.7L1020 38L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#937f49"></path><path d="M0 39L13 39.3C26 39.7 52 40.3 78.2 40.5C104.3 40.7 130.7 40.3 156.8 40.8C183 41.3 209 42.7 235.2 43.5C261.3 44.3 287.7 44.7 313.8 43.7C340 42.7 366 40.3 392.2 40.3C418.3 40.3 444.7 42.7 470.8 44C497 45.3 523 45.7 549.2 45.2C575.3 44.7 601.7 43.3 627.8 42.2C654 41 680 40 706.2 40.8C732.3 41.7 758.7 44.3 784.8 45C811 45.7 837 44.3 863.2 43C889.3 41.7 915.7 40.3 941.8 40.7C968 41 994 43 1007 44L1020 45L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1020 50" width="1020" height="50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 18L13 18.2C26 18.3 52 18.7 78.2 20.8C104.3 23 130.7 27 156.8 27C183 27 209 23 235.2 19.2C261.3 15.3 287.7 11.7 313.8 10.2C340 8.7 366 9.3 392.2 11.2C418.3 13 444.7 16 470.8 17.7C497 19.3 523 19.7 549.2 19.2C575.3 18.7 601.7 17.3 627.8 14.8C654 12.3 680 8.7 706.2 6.8C732.3 5 758.7 5 784.8 5.7C811 6.3 837 7.7 863.2 11.7C889.3 15.7 915.7 22.3 941.8 21C968 19.7 994 10.3 1007 5.7L1020 1L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#8f9853"></path><path d="M0 11L13 13C26 15 52 19 78.2 20.2C104.3 21.3 130.7 19.7 156.8 20.3C183 21 209 24 235.2 25.5C261.3 27 287.7 27 313.8 24.3C340 21.7 366 16.3 392.2 15C418.3 13.7 444.7 16.3 470.8 20C497 23.7 523 28.3 549.2 29.5C575.3 30.7 601.7 28.3 627.8 28.2C654 28 680 30 706.2 31.3C732.3 32.7 758.7 33.3 784.8 32.5C811 31.7 837 29.3 863.2 26C889.3 22.7 915.7 18.3 941.8 19.8C968 21.3 994 28.7 1007 32.3L1020 36L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#928f4e"></path><path d="M0 34L13 33.2C26 32.3 52 30.7 78.2 30.5C104.3 30.3 130.7 31.7 156.8 32C183 32.3 209 31.7 235.2 29.2C261.3 26.7 287.7 22.3 313.8 22.3C340 22.3 366 26.7 392.2 26.3C418.3 26 444.7 21 470.8 19.7C497 18.3 523 20.7 549.2 20.8C575.3 21 601.7 19 627.8 19C654 19 680 21 706.2 21.3C732.3 21.7 758.7 20.3 784.8 20.8C811 21.3 837 23.7 863.2 26.8C889.3 30 915.7 34 941.8 35.8C968 37.7 994 37.3 1007 37.2L1020 37L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#93874b"></path><path d="M0 37L13 37.5C26 38 52 39 78.2 39.3C104.3 39.7 130.7 39.3 156.8 39.8C183 40.3 209 41.7 235.2 40.2C261.3 38.7 287.7 34.3 313.8 32.2C340 30 366 30 392.2 30C418.3 30 444.7 30 470.8 31C497 32 523 34 549.2 36.2C575.3 38.3 601.7 40.7 627.8 39.3C654 38 680 33 706.2 30.2C732.3 27.3 758.7 26.7 784.8 28.7C811 30.7 837 35.3 863.2 36.5C889.3 37.7 915.7 35.3 941.8 33.8C968 32.3 994 31.7 1007 31.3L1020 31L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#937f49"></path><path d="M0 48L13 47.5C26 47 52 46 78.2 45C104.3 44 130.7 43 156.8 41.5C183 40 209 38 235.2 38.5C261.3 39 287.7 42 313.8 43.3C340 44.7 366 44.3 392.2 44C418.3 43.7 444.7 43.3 470.8 44C497 44.7 523 46.3 549.2 46C575.3 45.7 601.7 43.3 627.8 41.2C654 39 680 37 706.2 37C732.3 37 758.7 39 784.8 38.7C811 38.3 837 35.7 863.2 34.3C889.3 33 915.7 33 941.8 33.7C968 34.3 994 35.7 1007 36.3L1020 37L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#927748"></path></svg>
<svg id="visual" viewBox="0 0 1020 50" width="1020" height="50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"><path d="M0 0L13 2.8C26 5.7 52 11.3 78.2 12.8C104.3 14.3 130.7 11.7 156.8 10.3C183 9 209 9 235.2 10.5C261.3 12 287.7 15 313.8 17.3C340 19.7 366 21.3 392.2 18.3C418.3 15.3 444.7 7.7 470.8 9.2C497 10.7 523 21.3 549.2 22.3C575.3 23.3 601.7 14.7 627.8 12.2C654 9.7 680 13.3 706.2 13.5C732.3 13.7 758.7 10.3 784.8 8.8C811 7.3 837 7.7 863.2 10C889.3 12.3 915.7 16.7 941.8 20C968 23.3 994 25.7 1007 26.8L1020 28L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#8f9853"></path><path d="M0 23L13 24.5C26 26 52 29 78.2 28.2C104.3 27.3 130.7 22.7 156.8 23.2C183 23.7 209 29.3 235.2 31.8C261.3 34.3 287.7 33.7 313.8 32C340 30.3 366 27.7 392.2 24.7C418.3 21.7 444.7 18.3 470.8 18.8C497 19.3 523 23.7 549.2 23.7C575.3 23.7 601.7 19.3 627.8 20.2C654 21 680 27 706.2 27C732.3 27 758.7 21 784.8 19.2C811 17.3 837 19.7 863.2 19.3C889.3 19 915.7 16 941.8 17.2C968 18.3 994 23.7 1007 26.3L1020 29L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#928f4e"></path><path d="M0 23L13 22.5C26 22 52 21 78.2 20.2C104.3 19.3 130.7 18.7 156.8 21.7C183 24.7 209 31.3 235.2 34.5C261.3 37.7 287.7 37.3 313.8 34.5C340 31.7 366 26.3 392.2 26.8C418.3 27.3 444.7 33.7 470.8 33.2C497 32.7 523 25.3 549.2 23.2C575.3 21 601.7 24 627.8 24.2C654 24.3 680 21.7 706.2 23C732.3 24.3 758.7 29.7 784.8 33.2C811 36.7 837 38.3 863.2 39C889.3 39.7 915.7 39.3 941.8 38C968 36.7 994 34.3 1007 33.2L1020 32L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#93874b"></path><path d="M0 29L13 29.3C26 29.7 52 30.3 78.2 32.5C104.3 34.7 130.7 38.3 156.8 40.5C183 42.7 209 43.3 235.2 43.5C261.3 43.7 287.7 43.3 313.8 41C340 38.7 366 34.3 392.2 34.3C418.3 34.3 444.7 38.7 470.8 37.8C497 37 523 31 549.2 29.8C575.3 28.7 601.7 32.3 627.8 35.5C654 38.7 680 41.3 706.2 41.7C732.3 42 758.7 40 784.8 36.8C811 33.7 837 29.3 863.2 30.3C889.3 31.3 915.7 37.7 941.8 38C968 38.3 994 32.7 1007 29.8L1020 27L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#937f49"></path><path d="M0 40L13 39.7C26 39.3 52 38.7 78.2 38.3C104.3 38 130.7 38 156.8 37.3C183 36.7 209 35.3 235.2 36.3C261.3 37.3 287.7 40.7 313.8 41.2C340 41.7 366 39.3 392.2 39.8C418.3 40.3 444.7 43.7 470.8 45.7C497 47.7 523 48.3 549.2 46.8C575.3 45.3 601.7 41.7 627.8 39.3C654 37 680 36 706.2 37.3C732.3 38.7 758.7 42.3 784.8 44.3C811 46.3 837 46.7 863.2 46.7C889.3 46.7 915.7 46.3 941.8 45.5C968 44.7 994 43.3 1007 42.7L1020 42L1020 51L1007 51C994 51 968 51 941.8 51C915.7 51 889.3 51 863.2 51C837 51 811 51 784.8 51C758.7 51 732.3 51 706.2 51C680 51 654 51 627.8 51C601.7 51 575.3 51 549.2 51C523 51 497 51 470.8 51C444.7 51 418.3 51 392.2 51C366 51 340 51 313.8 51C287.7 51 261.3 51 235.2 51C209 51 183 51 156.8 51C130.7 51 104.3 51 78.2 51C52 51 26 51 13 51L0 51Z" fill="#927748"></path></svg>


  useEffect(() => {
    if (window.innerWidth >= 1024) {
      if (image2Ref.current) {
        image2Ref.current.style.top = `${
          -100 * normalise(position.y, window.innerHeight, -1, 1.5)
        }%`;
        image2Ref.current.style.left = `${
          20 * normalise(position.x, window.innerWidth, 1, 1.5)
        }%`;
      }
      if (image3Ref.current) {
        image3Ref.current.style.bottom = `${
          -350 * normalise(position.y, window.innerHeight, 1, 0.9)
        }%`;
        image3Ref.current.style.left = `${
          40 * normalise(position.x, window.innerWidth, 1, 0.9)
        }%`;
      }
    }
  }, [position]);

  import { NextRequest, NextResponse } from "next/server";
import { getDownloadURL } from "firebase-admin/storage";
import pdfjsLib from 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.2.67/+esm'

const doc = pdfjsLib.getDocument('../../../public/fusion/1. How to Make Bolts and Nuts Accessible for Fabrication.docx')
console.log(doc)

export async function POST(req: NextRequest) {
  return NextResponse.json({ body: "hello" });
}

const app2 = initApp({
  credential: cert(ServiceAccountJSON as ServiceAccount),
  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
}, `${randomInt(2**47)}`)

export const hello = (
  <div>
    <Link target="_blank" href="http://office.com">
      Microsoft Office
    </Link>{" "}
    document, powered by{" "}
    <Link target="_blank" href="http://office.com/webapps">
      Office Online
    </Link>
    .
  </div>
);
